
.Sequencer {
  --channel-height: 1.2rem;
  display: flex;
  align-items: stretch;
  height: min-content;
}

.Sequencer-timeline {
  position: relative;
  overflow: hidden;
  flex-grow: 1;
}


.Sequencer-tape {

  /* todo - port whatever is required from the tape rules,
  and think of another way of implementing the rolling tape */
  display: none;

  --seq-ticks: 2;
  /* dividing by 2 as the container width is 200% */
  --seq-tick-beat: calc((100% / var(--seq-ticks)) / 2);
  --seq-tick-bar: calc(var(--seq-tick-beat) * 4);
  --seq-tick-quarter: calc(var(--seq-tick-beat) / 4);
  --seq-tick-beat-border: calc(var(--seq-tick-beat) - .1rem);
  --seq-tick-bar-border: calc(var(--seq-tick-bar) - .2rem);
  --seq-tick-quarter-border: calc(var(--seq-tick-quarter) - .05rem);
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 100%;
  width: 200%;
  background-color: var(--background-color-complement);
}

@media (min-width: 200px) { .Sequencer-tape { --seq-ticks: 4 } }
@media (min-width: 400px) { .Sequencer-tape { --seq-ticks: 8 } }
@media (min-width: 600px) { .Sequencer-tape { --seq-ticks: 12 } }
@media (min-width: 800px) { .Sequencer-tape { --seq-ticks: 16 } }
@media (min-width: 1000px) { .Sequencer-tape { --seq-ticks: 20 } }
@media (min-width: 1200px) { .Sequencer-tape { --seq-ticks: 24 } }
@media (min-width: 1400px) { .Sequencer-tape { --seq-ticks: 28 } }
@media (min-width: 1600px) { .Sequencer-tape { --seq-ticks: 32 } }

.Sequencer-tape:hover {
  animation: slideLeft 4s linear reverse infinite;
  animation-fill-mode: both;
}

.Sequencer-tape:before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-image:
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent var(--seq-tick-quarter-border),
      var(--background-color) var(--seq-tick-quarter-border),
      var(--background-color) var(--seq-tick-quarter)
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent var(--seq-tick-beat-border),
      var(--background-color) var(--seq-tick-beat-border),
      var(--background-color) var(--seq-tick-beat)
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent var(--seq-tick-bar-border),
      var(--background-color) var(--seq-tick-bar-border),
      var(--background-color) var(--seq-tick-bar)
    );
}

.Sequencer-channels {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.Sequencer-channels .Sequencer-channel {
  height: var(--channel-height);
}

.Sequencer-channels .Sequencer-channel .Sequencer-tick {
  appearance: none;
  width: calc(100% / var(--ticks-count));
  height: 100%;
  border-radius: calc(var(--channel-height) * .25);
  border: calc(var(--channel-height) * .1) solid var(--background-color);
  background-color: var(--background-color-complement);
  cursor: pointer;
}

.Sequencer-channels .Sequencer-channel .Sequencer-tick:checked:active,
.Sequencer-channels .Sequencer-channel .Sequencer-tick:hover:not(:active) {
  background-color: var(--accent-color-complement);
}

.Sequencer-channels .Sequencer-channel .Sequencer-tick:active,
.Sequencer-channels .Sequencer-channel .Sequencer-tick:checked:not(:active) {
  background-color: var(--accent-color);
}

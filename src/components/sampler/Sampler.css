
/* make animations available only if the user enabled animations in the OS settings */
@import url('./animations.css') (prefers-reduced-motion: no-preference);


.drifter-sampler {
  /* todo - get bpm from outside */
  --bpm: 99;
  --sampler-ticks: 4;
  --sampler-ticks-per-beat: 4;
  --sampler-tape-speed: calc(
    ((60s / var(--bpm)) / var(--sampler-ticks-per-beat)) * var(--sampler-ticks)
  );
  /* --sampler-tape-timing: linear; */
  --sampler-tape-timing: steps(var(--sampler-ticks));
  --channel-height: 1.2rem;
  display: flex;
  align-items: stretch;
  height: min-content;
}

.drifter-sampler-timeline {
  position: relative;
  overflow: hidden;
  flex-grow: 1;
}


.drifter-sampler .drifter-sampler-tape {
  /* dividing by 2 as the container width is 200% */
  --sampler-tick-width: calc((100% / var(--sampler-ticks) / 2));
  display: none;
  position: absolute;
  z-index: 9;
  top: 0;
  bottom: 0;
  left: 0;
  right: 100%;
  width: 200%;
  /* create a background image with a transparent stripe at the begining,
    and repeat it twice to span the full width */
  background-image: linear-gradient(
    90deg,
    transparent,
    transparent var(--sampler-tick-width),
    var(--background-color) var(--sampler-tick-width),
    var(--background-color) 50%,
    transparent 50%,
    transparent calc(50% + var(--sampler-tick-width)),
    var(--background-color) calc(50% + var(--sampler-tick-width)),
    var(--background-color) 100%
  );
  opacity: .75;
  pointer-events: none;
}

.drifter-sampler.drifter-sampler-running .drifter-sampler-tape {
  display: block;
  animation:
    slideLeft
    var(--sampler-tape-speed)
    var(--sampler-tape-timing)
    reverse
    infinite;
}

.drifter-sampler-channels {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.drifter-sampler-channels .drifter-sampler-channel {
  overflow: hidden;
  height: var(--channel-height);
  white-space: nowrap;
}

.drifter-sampler-channel .drifter-sampler-tick {
  width: calc(100% / var(--sampler-ticks));
  height: 100%;
  border: calc(var(--channel-height) * .1) solid var(--background-color);
}

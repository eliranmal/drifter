:root {
  --background-color: #4a4a4a;
  --background-color-tint: #6a6a6ab0;
  --background-color-shade: #2a2a2ab0;
  --background-color-complement: #5c5c5c;
  --background-color-complement-tint: #7c7c7cb0;
  --background-color-complement-shade: #3c3c3cb0;
  --foreground-color: #ccc;
  --accent-color: #a3aae5;
}


*,
*:before,
*:after {
  box-sizing: border-box;
}

html,
body,
label,
input,
button,
select {
  font-size: calc(16px + .5vmax);
  font-family: trench, sans-serif;
}

html,
body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  color: var(--foreground-color);
  background-color: var(--background-color);
}

label,
input,
select,
option,
button {
  --form-control-height: 1.5rem;
  height: var(--form-control-height);
  outline: none;
  border: 0 none;
}

label {
  display: block;
  line-height: 1.5;
  white-space: nowrap;
}

input[type="text"],
input[type="number"],
select,
option,
button {
  color: var(--accent-color);
  background-color: var(--background-color-complement);
}

input[type="text"],
input[type="number"],
select,
button {
  --form-control-shadow-offset: calc(var(--form-control-height) * .025);
  --form-control-shadow-blur: calc(var(--form-control-shadow-offset) * 10);
  --form-control-shadow-spread: calc(var(--form-control-shadow-offset) * -.5);
  border-radius: calc(var(--form-control-height) * .5);
  box-shadow:
    calc(var(--form-control-shadow-offset) * -1)
    calc(var(--form-control-shadow-offset) * -1)
    var(--form-control-shadow-blur)
    var(--form-control-shadow-spread)
    var(--background-color-tint),
    var(--form-control-shadow-offset)
    var(--form-control-shadow-offset)
    var(--form-control-shadow-blur)
    var(--form-control-shadow-spread)
    var(--background-color-shade);
}

.settings input[type="text"],
.settings input[type="number"],
.settings select,
.settings button {
  box-shadow:
    calc(var(--form-control-shadow-offset) * -1)
    calc(var(--form-control-shadow-offset) * -1)
    var(--form-control-shadow-blur)
    var(--form-control-shadow-spread)
    var(--background-color-complement-tint),
    var(--form-control-shadow-offset)
    var(--form-control-shadow-offset)
    var(--form-control-shadow-blur)
    var(--form-control-shadow-spread)
    var(--background-color-complement-shade);
}

button:active {
  --form-control-active-offset: calc(var(--form-control-height) * .005);
  transform: translate(
                var(--form-control-active-offset),
                var(--form-control-active-offset))
             scale(.985);
}

select,
input[type="number"] {
  padding-inline-start: .5rem;
  padding-inline-end: 0;
}

input[type="number"] {
  width: 3rem;
}

meter,
input[type="range"] {
  opacity: .5;
}

meter:not(:hover),
input[type="range"]:not(:hover) {
  filter: grayscale();
}



.app {
  --panel-pad: 2rem;
  --aside-width: max(37vw, 16rem);
  display: flex;
  width: 100vw;
  height: 100vh;
}

.box {
  width: calc(100vw - (var(--panel-pad) * 2) - var(--aside-width));
  overflow: hidden;
  padding: .3rem;
  border: .1rem solid var(--accent-color);
  border-radius: .6rem;
}

.title {
  margin: 0;
  font-size: 4rem;
  letter-spacing: -.05em;
  font-weight: 100;
  text-align: right;
  color: var(--accent-color);
}

.main {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  flex-grow: 1;
  margin: var(--panel-pad);
}

.main > :not(:last-child) {
  margin-block-end: .75rem;
}

.aside {
  position: relative;
  display: flex;
  width: 0;
  padding: var(--panel-pad);
  padding-right: 0;
  background-color: var(--background-color-complement);
  transition: all 444ms ease-in 44ms;
}

.aside:before {
  content: 's\0000a0\0000a0\0000a0\0000a0\0000a0ettings';
  position: absolute;
  top: .75rem;
  left: .75rem;
}

.aside:hover {
  width: var(--aside-width);
}




.settings {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  margin: 2.4rem .4rem;
}

.settings > * {
  margin-block-end: .5rem;
}

.settings :not(:last-child) {
  margin-inline-end: 1.5rem;
}

.settings .reset-interval {
  white-space: nowrap;
}

.settings .reset-interval :not(:last-child) {
  margin-inline-end: .1rem;
}



.sequencer {
  --channel-height: 1.2rem;
  display: flex;
  align-items: stretch;
  height: min-content;
}

.sequencer-timeline {
  position: relative;
  overflow: hidden;
  flex-grow: 1;
}

.sequencer-gutter {
  flex-grow: 0;
  flex-shrink: 0;
  width: 3rem;
  height: 100%;
  margin-inline-end: 1rem;
}

.sequencer-gutter.sequencer-controls {
  display: flex;
  flex-direction: column;
  justify-content: stretch;
}

.sequencer-gutter.sequencer-controls .channel {
  display: flex;
  align-items: center;
  height: var(--channel-height);
  border-block-start: .5vh solid transparent;
  overflow: hidden;
}

.sequencer-gutter.sequencer-controls .channel:before {
  content: '\0000a0\01f399\0000a0\01f56a\0000a0';
  line-height: 0;
  color: var(--background-color-tint);
  cursor: pointer;
}

.sequencer-gutter.sequencer-controls .channel:hover:before {
  color: var(--accent-color);
}

.sequencer-dots {
  --seq-dot-size: .4rem;
  position: absolute;
  top: -1.1rem;
  left: -.5rem;
  width: var(--seq-dot-size);
  height: var(--seq-dot-size);
  border-radius: calc(var(--seq-dot-size) * .5);
  background-color: var(--background-color);
  box-shadow:
    1rem 1.5rem 0 #333,
    3rem 3rem 0 #333,
    7rem 1.5rem 0 #333,
    11rem 3rem 0 #333,
    17rem 1.5rem 0 #333;
}

.sequencer-tape {
  --seq-ticks: 2;
  /* dividing by 2 as the container width is 200% */
  --seq-tick-beat: calc((100% / var(--seq-ticks)) / 2);
  --seq-tick-bar: calc(var(--seq-tick-beat) * 4);
  --seq-tick-quarter: calc(var(--seq-tick-beat) / 4);
  --seq-tick-beat-border: calc(var(--seq-tick-beat) - .1rem);
  --seq-tick-bar-border: calc(var(--seq-tick-bar) - .2rem);
  --seq-tick-quarter-border: calc(var(--seq-tick-quarter) - .05rem);
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 100%;
  width: 200%;
  background-color: var(--background-color-complement);
}

@media (min-width: 200px) { .sequencer-tape { --seq-ticks: 4 } }
@media (min-width: 400px) { .sequencer-tape { --seq-ticks: 8 } }
@media (min-width: 600px) { .sequencer-tape { --seq-ticks: 12 } }
@media (min-width: 800px) { .sequencer-tape { --seq-ticks: 16 } }
@media (min-width: 1000px) { .sequencer-tape { --seq-ticks: 20 } }
@media (min-width: 1200px) { .sequencer-tape { --seq-ticks: 24 } }
@media (min-width: 1400px) { .sequencer-tape { --seq-ticks: 28 } }
@media (min-width: 1600px) { .sequencer-tape { --seq-ticks: 32 } }

.sequencer-tape:hover {
  animation: slideLeft 4s linear reverse infinite;
  animation-fill-mode: both;
}

.sequencer-tape:before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-image:
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent var(--seq-tick-quarter-border),
      var(--background-color) var(--seq-tick-quarter-border),
      var(--background-color) var(--seq-tick-quarter)
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent var(--seq-tick-beat-border),
      var(--background-color) var(--seq-tick-beat-border),
      var(--background-color) var(--seq-tick-beat)
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent var(--seq-tick-bar-border),
      var(--background-color) var(--seq-tick-bar-border),
      var(--background-color) var(--seq-tick-bar)
    );
}

.sequencer-channels {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  pointer-events: none;
}

.sequencer-channels .channel {
  height: var(--channel-height);
}

.sequencer-channels .channel:not(:last-of-type) {
  border-block-end: .5vh solid var(--background-color);
}



.transport {
  display: flex;
  align-items: stretch;
  justify-content: center;
  padding: .5rem;
}

.transport-button {
  --transport-button-size: 2.6rem;
  --transport-icon-size: calc(var(--transport-button-size) * .333);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: var(--transport-button-size);
  height: var(--transport-button-size);
  margin-inline-end: var(--transport-icon-size);
  /* border: calc(var(--transport-button-size) * .025) solid var(--foreground-color); */
  border-radius: calc(var(--transport-button-size) * .5);
  cursor: pointer;
}

.transport-button:last-of-type {
  margin-inline-end: 0;
}

.transport-button:after {
  --transport-button-icon-color: var(--background-color);
  content: '';
  display: block;
  width: var(--transport-icon-size);
  height: var(--transport-icon-size);
  border-style: solid;
  /* faux icon fill color */
  border-color: var(--transport-button-icon-color);
}

.transport-button:hover:after {
  --transport-button-icon-color: var(--accent-color);
}

.transport-button.play:after {
  --transport-icon-size-play: calc(var(--transport-icon-size) * 1.1);
  width: var(--transport-icon-size-play);
  height: var(--transport-icon-size-play);
  margin-right: -20%;
  border-width: calc(var(--transport-icon-size-play) * .5)
                calc(var(--transport-icon-size-play) * .2)
                calc(var(--transport-icon-size-play) * .5)
                calc(var(--transport-icon-size-play) * .8);
  border-top-color: transparent;
  border-right-color: transparent;
  border-bottom-color: transparent;
}

.transport-button.stop:after {
  --transport-icon-size-stop: calc(var(--transport-icon-size) * .9);
  width: var(--transport-icon-size-stop);
  height: var(--transport-icon-size-stop);
  background-color: var(--transport-button-icon-color);
}

.transport-button.record:after {
  border-radius: calc(var(--transport-icon-size) * .5);
  border-width: calc(var(--transport-icon-size) * .5);
}



.crossfader {
  display: flex;
  justify-content: stretch;
}

.crossfader-range {
  flex-grow: 1;
}



.visualizations {
  display: flex;
  align-items: center;
  justify-content: stretch;
  align-self: flex-end;
  padding-top: 0;
  padding-bottom: 0;
}

.visualizations :not(:last-child) {
  margin-inline-end: .5rem;
}

.visualizations .tight,
.visualizations .loose {
  flex-grow: 1;
  min-height: 2rem;
  background-color: transparent;
}

.visualizations .tight {
}

.visualizations .loose {
}





@font-face {
  src: url('./trench100free.otf') format('opentype');
  font-family: trench;
  font-weight: 700;
}

@keyframes slideLeft {
  from { left: 0; right: 100%; }
  to { left: -100%; right: 0; }
}
